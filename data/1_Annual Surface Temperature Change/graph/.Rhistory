data <- subset(data, select = c(`Country` , `F2009`))
head(data)
cat("\014")
data <- read.csv("Annual_Surface_Temperature_Change.csv")
data <- na.omit(data)
View(data)
remove(list = ls())
cat("\014")
data <- read.csv("Annual_Surface_Temperature_Change.csv")
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv, overwrite = TRUE)
{
fileExt <- function(x) {
db <- grepl("\\.[^.]+\\.(gz|bz2|xz)$", x)
ans <- sub(".*\\.", "", x)
ans[db] <- sub(".*\\.([^.]+\\.)(gz|bz2|xz)$", "\\1\\2",
x[db])
ans
}
my_read_table <- function(...) {
lcc <- Sys.getlocale("LC_COLLATE")
on.exit(Sys.setlocale("LC_COLLATE", lcc))
Sys.setlocale("LC_COLLATE", "C")
read.table(...)
}
stopifnot(is.character(list))
names <- c(as.character(substitute(list(...))[-1L]), list)
if (!is.null(package)) {
if (!is.character(package))
stop("'package' must be a character vector or NULL")
}
paths <- find.package(package, lib.loc, verbose = verbose)
if (is.null(lib.loc))
paths <- c(path.package(package, TRUE), if (!length(package)) getwd(),
paths)
paths <- unique(normalizePath(paths[file.exists(paths)]))
paths <- paths[dir.exists(file.path(paths, "data"))]
dataExts <- tools:::.make_file_exts("data")
if (length(names) == 0L) {
db <- matrix(character(), nrow = 0L, ncol = 4L)
for (path in paths) {
entries <- NULL
packageName <- if (file_test("-f", file.path(path,
"DESCRIPTION")))
basename(path)
else "."
if (file_test("-f", INDEX <- file.path(path, "Meta",
"data.rds"))) {
entries <- readRDS(INDEX)
}
else {
dataDir <- file.path(path, "data")
entries <- tools::list_files_with_type(dataDir,
"data")
if (length(entries)) {
entries <- unique(tools::file_path_sans_ext(basename(entries)))
entries <- cbind(entries, "")
}
}
if (NROW(entries)) {
if (is.matrix(entries) && ncol(entries) == 2L)
db <- rbind(db, cbind(packageName, dirname(path),
entries))
else warning(gettextf("data index for package %s is invalid and will be ignored",
sQuote(packageName)), domain = NA, call. = FALSE)
}
}
colnames(db) <- c("Package", "LibPath", "Item", "Title")
footer <- if (missing(package))
paste0("Use ", sQuote(paste("data(package =", ".packages(all.available = TRUE))")),
"\n", "to list the data sets in all *available* packages.")
else NULL
y <- list(title = "Data sets", header = NULL, results = db,
footer = footer)
class(y) <- "packageIQR"
return(y)
}
paths <- file.path(paths, "data")
for (name in names) {
found <- FALSE
for (p in paths) {
tmp_env <- if (overwrite)
envir
else new.env()
if (file_test("-f", file.path(p, "Rdata.rds"))) {
rds <- readRDS(file.path(p, "Rdata.rds"))
if (name %in% names(rds)) {
found <- TRUE
if (verbose)
message(sprintf("name=%s:\t found in Rdata.rds",
name), domain = NA)
thispkg <- sub(".*/([^/]*)/data$", "\\1",
p)
thispkg <- sub("_.*$", "", thispkg)
thispkg <- paste0("package:", thispkg)
objs <- rds[[name]]
lazyLoad(file.path(p, "Rdata"), envir = tmp_env,
filter = function(x) x %in% objs)
break
}
else if (verbose)
message(sprintf("name=%s:\t NOT found in names() of Rdata.rds, i.e.,\n\t%s\n",
name, paste(names(rds), collapse = ",")),
domain = NA)
}
if (file_test("-f", file.path(p, "Rdata.zip"))) {
warning("zipped data found for package ", sQuote(basename(dirname(p))),
".\nThat is defunct, so please re-install the package.",
domain = NA)
if (file_test("-f", fp <- file.path(p, "filelist")))
files <- file.path(p, scan(fp, what = "",
quiet = TRUE))
else {
warning(gettextf("file 'filelist' is missing for directory %s",
sQuote(p)), domain = NA)
next
}
}
else {
files <- list.files(p, full.names = TRUE)
}
files <- files[grep(name, files, fixed = TRUE)]
if (length(files) > 1L) {
o <- match(fileExt(files), dataExts, nomatch = 100L)
paths0 <- dirname(files)
paths0 <- factor(paths0, levels = unique(paths0))
files <- files[order(paths0, o)]
}
if (length(files)) {
for (file in files) {
if (verbose)
message("name=", name, ":\t file= ...",
.Platform$file.sep, basename(file), "::\t",
appendLF = FALSE, domain = NA)
ext <- fileExt(file)
if (basename(file) != paste0(name, ".", ext))
found <- FALSE
else {
found <- TRUE
zfile <- file
zipname <- file.path(dirname(file), "Rdata.zip")
if (file.exists(zipname)) {
Rdatadir <- tempfile("Rdata")
dir.create(Rdatadir, showWarnings = FALSE)
topic <- basename(file)
rc <- .External(C_unzip, zipname, topic,
Rdatadir, FALSE, TRUE, FALSE, FALSE)
if (rc == 0L)
zfile <- file.path(Rdatadir, topic)
}
if (zfile != file)
on.exit(unlink(zfile))
switch(ext, R = , r = {
library("utils")
sys.source(zfile, chdir = TRUE, envir = tmp_env)
}, RData = , rdata = , rda = load(zfile,
envir = tmp_env), TXT = , txt = , tab = ,
tab.gz = , tab.bz2 = , tab.xz = , txt.gz = ,
txt.bz2 = , txt.xz = assign(name, my_read_table(zfile,
header = TRUE, as.is = FALSE), envir = tmp_env),
CSV = , csv = , csv.gz = , csv.bz2 = ,
csv.xz = assign(name, my_read_table(zfile,
header = TRUE, sep = ";", as.is = FALSE),
envir = tmp_env), found <- FALSE)
}
if (found)
break
}
if (verbose)
message(if (!found)
"*NOT* ", "found", domain = NA)
}
if (found)
break
}
if (!found) {
warning(gettextf("data set %s not found", sQuote(name)),
domain = NA)
}
else if (!overwrite) {
for (o in ls(envir = tmp_env, all.names = TRUE)) {
if (exists(o, envir = envir, inherits = FALSE))
warning(gettextf("an object named %s already exists and will not be overwritten",
sQuote(o)))
else assign(o, get(o, envir = tmp_env, inherits = FALSE),
envir = envir)
}
rm(tmp_env)
}
}
invisible(names)
}
remove(list = ls())
cat("\014")
data <- read.csv("Annual_Surface_Temperature_Change.csv")
data <- na.omit(data)
data <- subset(data, Country %in% c("United Kingdom", "United States","Austria", "Canada", "Finland","Sweden"))
data <- subset(data, select = c(`Country` , `F2009`))
head(data)
#The temperature change with respect to a baseline climatology years between 1961-2009 is measured in degrees Celsius.
remove(list = ls())
cat("\014")
data <- read.csv("Annual_Surface_Temperature_Change.csv")
data <- na.omit(data)
data <- subset(data, Country %in% c("United Kingdom", "United States","Austria", "Canada", "Finland","Sweden"))
data <- subset(data, select = c(`Country` , `F2009`))
head(data)
#------------------
graphics.off()
library(ggplot2)
library(gridExtra)
# create a dataset
Country = data$Country
Temperature_Change = data$F2009
data = data.frame(Country, Temperature_Change, Temperature_Change)
# We want to define the order of plotting
data$Country <- factor(data$Country , levels = Country)
data
str(data)
cbp1 <- c("cadetblue3", "firebrick2", "darkseagreen3", "darkgoldenrod2", "darkorange2", "orchid4")
plot1 <- ggplot(data, aes(y = Temperature_Change, x = Country, fill = Country)) +
geom_bar(position="dodge", stat="identity", colour="black", width=.7)  +
guides(fill=guide_legend(nrow = 1, byrow = TRUE)) +
scale_fill_manual(values = cbp1) +
geom_text(aes(label=Temperature_Change), size = 5, fontface = "bold", vjust = -0.2) +
ylab("Weight (g)") +
xlab("Country (mg/L)") +
labs(fill = "Country") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 18, hjust = 0.5),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = "top",
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 16))
plot1
#The temperature change with respect to a baseline climatology years between 1961-2009 is measured in degrees Celsius.
remove(list = ls())
cat("\014")
data <- read.csv("Annual_Surface_Temperature_Change.csv")
data <- na.omit(data)
data <- subset(data, Country %in% c("United Kingdom", "United States"))
data <- subset(data, select = -c(`ObjectId`,`Unit`, `ISO2`, `ISO3`,`Indicator`,`Source`,`CTS_Code`,`CTS_Name`,`CTS_Full_Descriptor`))
#data <- subset(data, select = c(`Country` , `F1970`, `F1971`))
head(data)
#------------------
library(reshape2)
library(ggplot2)
library(tidyr)
graphics.off()
#------------------
# Create a vector of column names for the years F1961 to F2009
years <- paste("F", 1961:2009, sep = "")
# Select the columns Country and the years F1961 to F2009
selected_columns <- c("Country", years)
# Create a new dataframe with the selected columns
selected_data <- data[selected_columns]
# Pivot the dataframe from wide to long format
transformed_data <- pivot_longer(selected_data, cols = -Country, names_to = "date", values_to = "value")
# Extract the year from the "date" column
transformed_data$date <- as.Date(substring(transformed_data$date, 2), format = "%Y")
# Extract the temperature type from the "Country" column
transformed_data$variable <- ifelse(grepl("United Kingdom", transformed_data$Country), "UK_temperature", "US_temperature")
# Remove unnecessary columns
transformed_data <- transformed_data[, c("date", "variable", "value")]
# Print the transformed dataframe
print(transformed_data)
df <- transformed_data
print(df, n = 1000)
str(df)
# Multiple line plot
plot1 <- ggplot(df, aes(x = date, y = value)) +
geom_line(aes(color = variable), size = 1) +
theme(legend.title = element_text(size = 18), legend.position = "top", legend.text = element_text(size = 16)) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
ylab("Value") +
xlab("Date") +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 16))
plot1
# Area plot
plot2 <- ggplot(df, aes(x = date, y = value)) +
geom_area(aes(color = variable, fill = variable), alpha = 0.2, position = position_dodge(0.8)) +
theme(legend.title = element_text(size=18), legend.position = "top", legend.text = element_text(size = 16)) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
#ggtitle(label = "Area chart for economics data") +
ylab("Value") +
xlab("Date") +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.grid.minor =  element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 16))
plot2
print(df, n = 10)
print(df, n = 5)
print(df, n = 5)
#The temperature change with respect to a baseline climatology years between 1961-2009 is measured in degrees Celsius.
remove(list = ls())
cat("\014")
data <- read.csv("Annual_Surface_Temperature_Change.csv")
data <- na.omit(data)
data <- subset(data, Country %in% c("United Kingdom", "United States"))
data <- subset(data, select = -c(`ObjectId`,`Unit`, `ISO2`, `ISO3`,`Indicator`,`Source`,`CTS_Code`,`CTS_Name`,`CTS_Full_Descriptor`))
#data <- subset(data, select = c(`Country` , `F1970`, `F1971`))
head(data)
#------------------
library(reshape2)
library(ggplot2)
library(tidyr)
graphics.off()
#------------------
# Create a vector of column names for the years F1961 to F2009
years <- paste("F", 1961:2009, sep = "")
# Select the columns Country and the years F1961 to F2009
selected_columns <- c("Country", years)
# Create a new dataframe with the selected columns
selected_data <- data[selected_columns]
# Pivot the dataframe from wide to long format
transformed_data <- pivot_longer(selected_data, cols = -Country, names_to = "date", values_to = "value")
# Extract the year from the "date" column
transformed_data$date <- as.Date(substring(transformed_data$date, 2), format = "%Y")
# Extract the temperature type from the "Country" column
transformed_data$variable <- ifelse(grepl("United Kingdom", transformed_data$Country), "United Kingdom", "United States")
# Remove unnecessary columns
transformed_data <- transformed_data[, c("date", "variable", "value")]
# Print the transformed dataframe
print(transformed_data)
df <- transformed_data
print(df, n = 5)
str(df)
# Multiple line plot
plot1 <- ggplot(df, aes(x = date, y = value)) +
geom_line(aes(color = variable), size = 1) +
theme(legend.title = element_text(size = 18), legend.position = "top", legend.text = element_text(size = 16)) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
ylab("Value") +
xlab("Date") +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 16))
plot1
# Area plot
plot2 <- ggplot(df, aes(x = date, y = value)) +
geom_area(aes(color = variable, fill = variable), alpha = 0.2, position = position_dodge(0.8)) +
theme(legend.title = element_text(size=18), legend.position = "top", legend.text = element_text(size = 16)) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
#ggtitle(label = "Area chart for economics data") +
ylab("Value") +
xlab("Date") +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.grid.minor =  element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 16))
plot2
print(df, n = 5)
#The temperature change with respect to a baseline climatology years between 1961-2009 is measured in degrees Celsius.
remove(list = ls())
cat("\014")
data <- read.csv("Annual_Surface_Temperature_Change.csv")
data <- na.omit(data)
data <- subset(data, Country %in% c("United Kingdom", "United States"))
data <- subset(data, select = -c(`ObjectId`,`Unit`, `ISO2`, `ISO3`,`Indicator`,`Source`,`CTS_Code`,`CTS_Name`,`CTS_Full_Descriptor`))
#data <- subset(data, select = c(`Country` , `F1970`, `F1971`))
head(data)
#------------------
library(reshape2)
library(ggplot2)
library(tidyr)
graphics.off()
#------------------
# Create a vector of column names for the years F1961 to F2009
years <- paste("F", 1961:2009, sep = "")
# Select the columns Country and the years F1961 to F2009
selected_columns <- c("Country", years)
# Create a new dataframe with the selected columns
selected_data <- data[selected_columns]
# Pivot the dataframe from wide to long format
transformed_data <- pivot_longer(selected_data, cols = -Country, names_to = "date", values_to = "value")
# Extract the year from the "date" column
transformed_data$date <- as.Date(substring(transformed_data$date, 2), format = "%Y")
# Extract the temperature type from the "Country" column
transformed_data$variable <- ifelse(grepl("United Kingdom", transformed_data$Country), "United Kingdom", "United States")
# Remove unnecessary columns
transformed_data <- transformed_data[, c("date", "Country", "value")]
# Print the transformed dataframe
print(transformed_data)
df <- transformed_data
print(df, n = 5)
str(df)
# Multiple line plot
plot1 <- ggplot(df, aes(x = date, y = value)) +
geom_line(aes(color = Country), size = 1) +
theme(legend.title = element_text(size = 18), legend.position = "top", legend.text = element_text(size = 16)) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
ylab("Value") +
xlab("Date") +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 16))
plot1
# Area plot
plot2 <- ggplot(df, aes(x = date, y = value)) +
geom_area(aes(color = variable, fill = variable), alpha = 0.2, position = position_dodge(0.8)) +
theme(legend.title = element_text(size=18), legend.position = "top", legend.text = element_text(size = 16)) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
#ggtitle(label = "Area chart for economics data") +
ylab("Value") +
xlab("Date") +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.grid.minor =  element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 16))
plot2
#The temperature change with respect to a baseline climatology years between 1961-2009 is measured in degrees Celsius.
remove(list = ls())
cat("\014")
data <- read.csv("Annual_Surface_Temperature_Change.csv")
data <- na.omit(data)
data <- subset(data, Country %in% c("United Kingdom", "United States"))
data <- subset(data, select = -c(`ObjectId`,`Unit`, `ISO2`, `ISO3`,`Indicator`,`Source`,`CTS_Code`,`CTS_Name`,`CTS_Full_Descriptor`))
#data <- subset(data, select = c(`Country` , `F1970`, `F1971`))
head(data)
#------------------
library(reshape2)
library(ggplot2)
library(tidyr)
graphics.off()
#------------------
# Create a vector of column names for the years F1961 to F2009
years <- paste("F", 1961:2009, sep = "")
# Select the columns Country and the years F1961 to F2009
selected_columns <- c("Country", years)
# Create a new dataframe with the selected columns
selected_data <- data[selected_columns]
# Pivot the dataframe from wide to long format
transformed_data <- pivot_longer(selected_data, cols = -Country, names_to = "date", values_to = "value")
# Extract the year from the "date" column
transformed_data$date <- as.Date(substring(transformed_data$date, 2), format = "%Y")
# Extract the temperature type from the "Country" column
transformed_data$variable <- ifelse(grepl("United Kingdom", transformed_data$Country), "United Kingdom", "United States")
# Remove unnecessary columns
transformed_data <- transformed_data[, c("date", "Country", "value")]
# Print the transformed dataframe
print(transformed_data)
df <- transformed_data
print(df, n = 5)
str(df)
# Multiple line plot
plot1 <- ggplot(df, aes(x = date, y = value)) +
geom_line(aes(color = Country), size = 1) +
theme(legend.title = element_text(size = 18), legend.position = "top", legend.text = element_text(size = 16)) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
ylab("Value") +
xlab("Date") +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 16))
plot1
# Area plot
plot2 <- ggplot(df, aes(x = date, y = value)) +
geom_area(aes(color = Country, fill = Country), alpha = 0.2, position = position_dodge(0.8)) +
theme(legend.title = element_text(size=18), legend.position = "top", legend.text = element_text(size = 16)) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
#ggtitle(label = "Area chart for economics data") +
ylab("Value") +
xlab("Date") +
theme(panel.grid.major = element_line(size = 0.5, linetype = 'dashed', colour = "grey"),
panel.grid.minor =  element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 18),
axis.text.x = element_text(size = 16),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 16))
plot2
